#include "./${OUTPUT_NAME}.h"

#include "descriptor_registry.h"

#include <limits>

#include <cassert>

extern "C" {

int descriptor_registry_context_create ( descriptor_registry_ctx* ctx ){
	assert(ctx);
	if(!ctx){
		return -1;
	}

	ctx->internal = new (std::nothrow) imb::descriptor_registry_map<float, int32_t>();

	if(!ctx->internal){
		return -1;
	}

	return 0;
}

void descriptor_registry_context_destroy ( descriptor_registry_ctx* ctx ){
	assert(ctx);
	if(!ctx){
		return;
	}

	auto ptr = reinterpret_cast<imb::descriptor_registry_map<float, int32_t>*>(ctx->internal);

	delete ptr;
}
